<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>

<body>
    <button id="but">123</button>
    <h1 id="h1s">1211</h1>
    <script type="text/javascript">
        // const valu = document.getElementById('name');
        // setTimeout(val => {
        //     console.log('我是宏任务');
        // })

        // new Promise(result => {
        //     console.log("我是同步任务");
        //     result()
        // }).then((result) => {
        //     console.log("我是微任务1");
        // }).then((err) => {
        //     console.log('我是宏任务2');
        // });
        // console.log('我是同步任务1');
        // 当所有同步任务完成后执行宏任务
        // s所以连续每隔一秒打印一个3
        // for (i = 0; i < 3; i++) {
        // setTimeout(val => {
        // console.log(i); //我是宏任务
        // }, 1000 * i)
        // }
        // 作用域
        // if (true) {
        //     const a = 10
        // }
        // console.log(a);
        // 对象
        // var a = {}
        // var b = {
        //     key: 'a'
        // }
        // var c = {
        //     key: 'c'
        // }
        // a[b] = 123;
        // a[c] = 456;
        // console.log(a[b]);
        //对象属性方法的查找
        // function Fun() {
        // this.a = "则是构造函数添加的"2
        // }
        // Fun.prototype.a = "这是Fun原型添加的"4
        // let obj = new Fun();
        // obj.a = '这是对象本身添加的'1
        // obj.__proto__.a = "这是对象原型添加的"3
        // Object.prototype.a = "这是Object添加的"5
        // console.log(obj.a);
        // var fun = function() {
        //     console.log("1211");
        //     return "aaaaa"
        // }
        // console.log(fun); //函数不会执行
        // console.log(new fun()) // 函数会执行并返回一个对象

        // function Fun() {
        // getname = function() {
        //     console.log('123');
        // }
        // return this
        // }
        // Fun.prototype.getname = function() {
        // console.log("0000");
        // }
        // console.log(new Fun().getname());
        // var h1s = document.getElementById('h1s');
        // var but = document.getElementById('but');
        // but.onclick = function() {
        //     console.log(this.id);
        // }.bind(h1s)
        var arr = [2, 4, 6, 8, 2, 5, 4, 9, 6]
        var arr1 = arr.sort((a, b) => {
            return a - b
        })
        console.log(arr1);
        var obj = [{
            name: '哈利波特',
            age: 14
        }, {
            name: '伏地魔',
            age: 213
        }, {
            name: '邓不肯校长',
            age: 100
        }]

        function conter(age) {
            return function(a, b) {
                var aval = a[age];
                var bval = b[age];
                return aval - bval;
            }
        }
        var obj1 = obj.sort((a, b) => {
            return a.age - b.age;
        })
        console.log(obj1);
    </script>
</body>

</html>